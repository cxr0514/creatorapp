generator client {
  provider = "prisma-client-js"
  output   = "../src/generated/prisma"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Account {
  id                String  @id @default(cuid())
  userId            String
  type              String
  provider          String
  providerAccountId String
  refresh_token     String?
  access_token      String?
  expires_at        Int?
  token_type        String?
  scope             String?
  id_token          String?
  session_state     String?
  user              User    @relation(fields: [userId], references: [id], onDelete: Cascade)

  @@unique([provider, providerAccountId])
}

model Session {
  id           String   @id @default(cuid())
  sessionToken String   @unique
  userId       String
  expires      DateTime
  user         User     @relation(fields: [userId], references: [id], onDelete: Cascade)
}

model User {
  id            String    @id @default(cuid())
  username      String?   @unique
  email         String    @unique
  password      String?
  createdAt     DateTime  @default(now())
  emailVerified DateTime?
  image         String?
  name          String?
  accounts      Account[]
  clips         Clip[]
  sessions      Session[]
  videos        Video[]
}

model VerificationToken {
  identifier String
  token      String   @unique
  expires    DateTime

  @@unique([identifier, token])
}

model Video {
  id            Int      @id @default(autoincrement())
  title         String
  uploadedAt    DateTime @default(now())
  userId        String
  cloudinaryId  String
  cloudinaryUrl String
  duration      Int?
  fileSize      Int?
  thumbnailUrl  String?
  clips         Clip[]
  user          User     @relation(fields: [userId], references: [id])
}

model Clip {
  id            Int      @id @default(autoincrement())
  title         String
  createdAt     DateTime @default(now())
  userId        String
  videoId       Int
  cloudinaryId  String
  cloudinaryUrl String
  startTime     Int?
  endTime       Int?
  thumbnailUrl  String?
  user          User     @relation(fields: [userId], references: [id])
  video         Video    @relation(fields: [videoId], references: [id])
}
